name: Release

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.18'
      - name: Calculate Next Release Version
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} > token
          gh auth login --with-token < token
          go install github.com/davidrjonas/semver-cli@1.1.0
          commit=$(git log --format="%H" -n 1)
          last_pr=$(gh api -X GET search/issues -f q="repo:mickaelalliel/telebot is:closed is:pr sort:created-desc $commit" --jq '.items[0].number')
          if  [[ $last_pr = ""  ]]; then echo "No pull request found" && exit 1; fi;
          
          bump=$(gh pr view $last_pr --json labels --jq '.labels | map(select(.name | contains("release")) | .name) | .[0]' | sed s/release-//g)
          if ! [[ "$bump" =~ ^(minor|patch|major) ]]; then echo "Not a release commit" && exit 1; fi;        
          echo $bump > bump.txt
          cat bump.txt
          current=$(gh release list | awk '{print $1}' | awk 'NR==1' | sed s/v//g)
          semver-cli inc $bump $current > next_version
          echo "next version: $(cat next_version)"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      - name: Build
        run: |
          docker build -t $(cat docker-repository.txt)/parser:$(cat next_version) -f parser/Dockerfile parser
          docker build -t $(cat docker-repository.txt)/admin:$(cat next_version) -f admin/Dockerfile admin
      - name: Push
        run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev
          docker push $(cat docker-repository.txt)/parser:$(cat next_version)
          docker push $(cat docker-repository.txt)/admin:$(cat next_version)
      - name: Release
        run: gh release create v$(cat next_version)
      - name: Update Cloud run
        run: |
          gcloud run services update parser --region europe-west1 --image $(cat docker-repository.txt)/parser:$(cat next_version)
          gcloud run services update admin --region europe-west1 --image $(cat docker-repository.txt)/admin:$(cat next_version)